Functionality:
  - MVP:
    - Auth for single role - user
    - Upload RAW files
    - Display file list - thumbnails
    - Display image with details and download option
    - Quick search by file names
    - Favorite option for images
    ----
    - Improve photo grid with line grid view
    - New Go static code analysis
    - Extract constants and Status/Error variables on top of Go modules
    - Set up proper doc comments
    - Write unit tests - refactor with dependency injection (no framework)
    - HATEOAS - links for objects
    - Frontend regression tests!
    - Optimize pointer usages for large object passing (Photo, Image, Descriptor)
    - Add dashboard (with the favorite images)
  - Next steps:
    - Add tooltips and info icons everywhere
    - Have a "rows" type of view for photos - photo with details next to it, potentially dwonload and favorite buttons
    - Add favorite button to 
    - Add rating option for images
    - Add tags for images
    - Create secondary image (~FHD size), optional on user preferences - for better image display
    - Display used space in user preferences
    - Add filtering, ordering and pagination for images
    - Enable batch uploading files
    - Add grouping for images
    - Add history/audit
    - Add OpenID for Google/Facebook
    - Add personal lifecycle rules
      - archive files after Y days
      - delete files after X days
      - keep favorites for indefinite
      - needs user preferences & CRONs
    - Implement advanced search (fulltext search with ES)

Frontend:
- Refactor React metadata view to use cards instead of tables (https://mui.com/material-ui/react-card/)

Backend:
- Add CSRF - https://www.stackhawk.com/blog/react-csrf-protection-guide-examples-and-how-to-enable-it/
- Move out GORM, use plain SQL instead
    - rewrite to plain SQL
    - create migration mechanism
- Think about integration tests
- Add AWS and GCP image storage implementation (S3, G CDN)
- Create microservices architecture
- Kubernetes IaC for microservices

- Free database: Elephantsql or Planetscale
- Free edge location: Vercel
