// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/confirm": {
            "get": {
                "description": "Confirms the email address of the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Email confirmation endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Token for the email confirmation",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/login": {
            "post": {
                "description": "Logs in the user, sets up the JWT authorization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User login endpoint",
                "parameters": [
                    {
                        "description": "Credentials provided for the login",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/logout": {
            "get": {
                "description": "Logs out of the application, deletes the JWT token uased for authorization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Logout endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/password/change": {
            "put": {
                "description": "Resets the password of the logged in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Reset password endpoint",
                "parameters": [
                    {
                        "description": "The new and old passwords, required to update the password",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.PasswordChange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/password/reset": {
            "put": {
                "description": "Resets the password of the logged in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Reset password endpoint",
                "parameters": [
                    {
                        "description": "The token and new password to reset the current set password",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.PasswordReset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/recover": {
            "put": {
                "description": "Send a password reset email to a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Recover account endpoint",
                "parameters": [
                    {
                        "description": "The email to send the account recovery to",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.Recovery"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/resend": {
            "put": {
                "description": "Resends email confirmation for an email address.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Resends email confirmation endpoint",
                "parameters": [
                    {
                        "description": "The email to send the confirmation to",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.ConfirmationResend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/signup": {
            "post": {
                "description": "Signs the user up for the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User registration endpoint",
                "parameters": [
                    {
                        "description": "User data provided for the signup",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.Registration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/albums/": {
            "get": {
                "description": "Returns a list of albums for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "endpoint for retrieving albums of a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/collection.Resp"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates an album collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Endpoint for creating an album collection.",
                "parameters": [
                    {
                        "description": "Data provided for creating the album",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/collection.CreateAlbum"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/collection.Resp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/albums/:id": {
            "get": {
                "description": "Returns an album by the ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Endpoint fore retrieving a album by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of Collection to retrieve",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/collection.Resp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an album by the ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Endpoint fore deleting an album by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of Collection to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/collection.Resp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patches an album by the ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Endpoint for patching an album by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of Collection to patch",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/collection.Resp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "description": "Returns the status and version of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Health check endpoint of the Photostorage app",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Health"
                        }
                    }
                }
            }
        },
        "/photos": {
            "get": {
                "description": "Returns all photo descriptors for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "List user's photo descriptors endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/photo.Response"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/photos/:id": {
            "get": {
                "description": "Returns the photo descriptor with the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Get photo endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the photo information to collect",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/photo.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates tags and favorite setting for RAW file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Update photo endpoint for tags and favorite setting",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the photo to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The new version of the photo to use for update",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/photo.Response"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the photo with the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Delete photo endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the photo to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/photo.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/photos/:id/raw": {
            "get": {
                "description": "Returns the RAW file for the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Download RAW file endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the RAW photo to download",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/photos/:id/thumbnail": {
            "get": {
                "description": "Returns the thumbnail for the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Thumbnail image endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the thumbnail to download",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/roles/": {
            "get": {
                "description": "Lists all roles of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Role list endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/roles/:id": {
            "put": {
                "description": "Updates the settings of a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Role update endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the role information to patch",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The new version of the role to use for update",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.ProfileRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/rules/": {
            "get": {
                "description": "Returns the list of rules for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "endpoint for retrieving rules of a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rule.Resp"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a lifecycle rule for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rule"
                ],
                "summary": "Rule creation endpoint",
                "parameters": [
                    {
                        "description": "Data provided for creating the lifecycle rule",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rule.CreateRule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/rule.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/rules/:id": {
            "get": {
                "description": "Returns a rule by the ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Endpoint for retrieving a rule by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of rule to retrieve",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rule.Resp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/rules/constants": {
            "get": {
                "description": "Returns the constants used for rule creation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Endpoint for retrieving constants for rule creation.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rule.Constants"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/rulesets/": {
            "get": {
                "description": "Returns a list of rule sets for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "endpoint for retrieving rule sets of a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ruleset.Resp"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a lifecycle rule set for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rule"
                ],
                "summary": "Rule set creation endpoint",
                "parameters": [
                    {
                        "description": "The data to use for creating the ruleset",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ruleset.CreateRuleSet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ruleset.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/rulesets/:id": {
            "get": {
                "description": "Returns a rule set by the ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Endpoint fore retrieving a rule set by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of rule set to retrieve",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ruleset.Resp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a lifecycle rule set for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rule"
                ],
                "summary": "Rule set updating endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the role to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The ruleset to be updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ruleset.Resp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ruleset.Resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a rule set by the ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Endpoint fore deleting a rule set by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of rule set to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/search/favorites": {
            "get": {
                "description": "Returns favorite photo descriptors for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Search user's favorite photo descriptors endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/photo.Response"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/search/quick": {
            "get": {
                "description": "Returns all photo descriptors matching the provided search text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Quick search user's photo descriptors endpoint, case sensitive prefix search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/photo.Response"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/statistics/app": {
            "get": {
                "description": "Returns the app statistics on stored photos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "App statistics endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stats.AppStats"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/statistics/user": {
            "get": {
                "description": "Returns the user statistics on stored photos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User statistics endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stats.UserStats"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/uploads/": {
            "get": {
                "description": "Returns a list of uploads for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "endpoint for retrieving uploads of a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/collection.Resp"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Upload RAW files to store",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Photo upload endpoint",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Photos to store",
                        "name": "files[]",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/uploads/:id": {
            "get": {
                "description": "Returns an upload by the ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Endpoint fore retrieving an upload by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of Collection to retrieve",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/collection.Resp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Lists the users of the application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List users endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/users/:id": {
            "put": {
                "description": "Updates the target user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User update endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user information to patch",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The new version of the user information to use for update",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the target user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User update endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user information to patch",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/users/:id/enabled": {
            "put": {
                "description": "Updates the target user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User enable/disable endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user information to patch",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Whether the user is enabled to log in and upload photos",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.SetEnabled"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "description": "Gets the current logged in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get user profile endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.Profile"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/users/reset": {
            "post": {
                "description": "Resets the password of the logged in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Reset password endpoint",
                "responses": {
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.ConfirmationResend": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "account.PasswordChange": {
            "type": "object",
            "required": [
                "new",
                "old"
            ],
            "properties": {
                "new": {
                    "type": "string"
                },
                "old": {
                    "type": "string"
                }
            }
        },
        "account.PasswordReset": {
            "type": "object",
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "account.Recovery": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "collection.CreateAlbum": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "photos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "collection.Resp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/photo.Response"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "common.Health": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "common.StatusMessage": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "descriptor.Response": {
            "type": "object",
            "properties": {
                "favorite": {
                    "type": "boolean"
                },
                "filename": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/image.Response"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thumbnail": {
                    "type": "string"
                },
                "thumbnail_height": {
                    "type": "integer"
                },
                "thumbnail_width": {
                    "type": "integer"
                },
                "uploaded": {
                    "type": "string"
                }
            }
        },
        "image.PresignedRequest": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "image.Response": {
            "type": "object",
            "properties": {
                "ISO": {
                    "type": "integer"
                },
                "aperture": {
                    "type": "number"
                },
                "camera_make": {
                    "type": "string"
                },
                "camera_model": {
                    "type": "string"
                },
                "camera_sw": {
                    "type": "string"
                },
                "colors": {
                    "type": "integer"
                },
                "data_size": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "lens_make": {
                    "type": "string"
                },
                "lens_model": {
                    "type": "string"
                },
                "shutter": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "photo.Response": {
            "type": "object",
            "properties": {
                "descriptor": {
                    "$ref": "#/definitions/descriptor.Response"
                },
                "id": {
                    "type": "string"
                },
                "raw": {
                    "$ref": "#/definitions/image.PresignedRequest"
                },
                "thumbnail": {
                    "$ref": "#/definitions/image.PresignedRequest"
                }
            }
        },
        "role.ProfileRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "quota": {
                    "type": "integer"
                }
            }
        },
        "rule.Action": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "targeted": {
                    "type": "boolean"
                }
            }
        },
        "rule.Constants": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rule.Action"
                    }
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rule.Target"
                    }
                }
            }
        },
        "rule.CreateRule": {
            "type": "object",
            "properties": {
                "action_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "target_id": {
                    "type": "integer"
                },
                "timing": {
                    "type": "integer"
                }
            }
        },
        "rule.Resp": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/rule.Action"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/rule.Target"
                },
                "timing": {
                    "type": "integer"
                }
            }
        },
        "rule.Target": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ruleset.CreateRuleSet": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "ruleset.Resp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rule.Resp"
                    }
                }
            }
        },
        "stats.AppStats": {
            "type": "object",
            "properties": {
                "favorites": {
                    "type": "integer"
                },
                "photos": {
                    "type": "integer"
                },
                "quota": {
                    "type": "integer"
                },
                "total_users": {
                    "type": "integer"
                },
                "used_space": {
                    "type": "integer"
                },
                "user_distribution": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.RoleUser"
                    }
                }
            }
        },
        "stats.UserStats": {
            "type": "object",
            "properties": {
                "albums": {
                    "type": "integer"
                },
                "available_space": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "favorites": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "photos": {
                    "type": "integer"
                },
                "quota": {
                    "type": "integer"
                },
                "registration_date": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "uploads": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "used_space": {
                    "type": "integer"
                }
            }
        },
        "user.Credentials": {
            "type": "object",
            "required": [
                "captcha_token",
                "email",
                "password"
            ],
            "properties": {
                "captcha_token": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.Profile": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/role.ProfileRole"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "user.Registration": {
            "type": "object",
            "required": [
                "captcha_token",
                "email",
                "password"
            ],
            "properties": {
                "captcha_token": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.RoleUser": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                },
                "users": {
                    "type": "integer"
                }
            }
        },
        "user.SetEnabled": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "RAW.Ninja API",
	Description:      "RAW.Ninja is an application to store RAW image files.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
