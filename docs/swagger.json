{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/healthcheck": {
            "get": {
                "description": "Returns the status and version of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Health check endpoint of the Photostorage app",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Health"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logs in the user, sets the necessary cookies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User login endpoint",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "Logs out of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Logout endpoint",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/photos": {
            "get": {
                "description": "Returns all photo descriptors for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "List user's photo descriptors endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/photo.Response"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusMessage"
                        }
                    }
                }
            }
        },
        "/photos/:id": {
            "get": {
                "description": "Returns the photo descriptor with the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Get photo endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the photo information to collect",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/photo.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusMessage"
                        }
                    }
                }
            }
        },
        "/photos/:id/download": {
            "get": {
                "description": "Returns the RAW file for the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Download RAW file endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the RAW photo to download",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusMessage"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Registers the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User registration endpoint",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/reset": {
            "post": {
                "description": "Returns the status and version of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Reset password endpoint",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "description": "Upload a RAW file with descriptor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Photo upload endpoint",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Photo to store",
                        "name": "photo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusMessage"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.Health": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "controller.StatusMessage": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "descriptor.Response": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thumbnail": {
                    "type": "string"
                },
                "uploaded": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "photo.Response": {
            "type": "object",
            "properties": {
                "descriptor": {
                    "$ref": "#/definitions/descriptor.Response"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    }
}