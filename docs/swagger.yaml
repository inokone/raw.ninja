definitions:
  auth.Profile:
    properties:
      email:
        type: string
      id:
        type: string
      phone:
        type: string
    type: object
  common.Health:
    properties:
      status:
        type: string
      version:
        type: string
    type: object
  common.StatusMessage:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  descriptor.Response:
    properties:
      filename:
        type: string
      format:
        type: string
      id:
        type: string
      metadata:
        $ref: '#/definitions/image.Response'
      tags:
        items:
          type: string
        type: array
      thumbnail:
        type: string
      uploaded:
        type: string
    type: object
  image.Response:
    properties:
      aperture:
        type: number
      cameraMake:
        type: string
      cameraModel:
        type: string
      cameraSW:
        type: string
      colors:
        type: integer
      dataSize:
        type: integer
      height:
        type: integer
      iso:
        type: integer
      lensMake:
        type: string
      lensModel:
        type: string
      shutter:
        type: number
      timestamp:
        type: string
      width:
        type: integer
    type: object
  photo.Response:
    properties:
      descriptor:
        $ref: '#/definitions/descriptor.Response'
      id:
        type: string
    type: object
info:
  contact: {}
paths:
  /healthcheck:
    get:
      consumes:
      - application/json
      description: Returns the status and version of the application
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Health'
      summary: Health check endpoint of the Photostorage app
  /login:
    post:
      consumes:
      - application/json
      description: Logs in the user, sets up the JWT authorization
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.StatusMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.StatusMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.StatusMessage'
      summary: User login endpoint
  /logout:
    get:
      consumes:
      - application/json
      description: Logs out of the application, deletes the JWT token uased for authorization
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.StatusMessage'
      summary: Logout endpoint
  /photos:
    get:
      consumes:
      - application/json
      description: Returns all photo descriptors for the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/photo.Response'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.StatusMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.StatusMessage'
      summary: List user's photo descriptors endpoint
      tags:
      - photos
  /photos/:id:
    get:
      consumes:
      - application/json
      description: Returns the photo descriptor with the provided ID
      parameters:
      - description: ID of the photo information to collect
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/photo.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.StatusMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.StatusMessage'
      summary: Get photo endpoint
      tags:
      - photos
  /photos/:id/download:
    get:
      consumes:
      - application/json
      description: Returns the RAW file for the provided ID
      parameters:
      - description: ID of the RAW photo to download
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.StatusMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.StatusMessage'
      summary: Download RAW file endpoint
      tags:
      - photos
  /profile:
    get:
      consumes:
      - application/json
      description: Gets the current logged in user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.Profile'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/common.StatusMessage'
      summary: Get user profile endpoint
  /reset:
    post:
      consumes:
      - application/json
      description: Returns the status and version of the application
      produces:
      - application/json
      responses:
        "501":
          description: Not Implemented
          schema:
            $ref: '#/definitions/common.StatusMessage'
      summary: Reset password endpoint
  /signup:
    post:
      consumes:
      - application/json
      description: Registers the user
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/common.StatusMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.StatusMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.StatusMessage'
      summary: User registration endpoint
  /upload:
    post:
      consumes:
      - application/json
      description: Upload a RAW file with descriptor
      parameters:
      - description: Photo to store
        in: formData
        name: photo
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/common.StatusMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.StatusMessage'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/common.StatusMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.StatusMessage'
      summary: Photo upload endpoint
      tags:
      - photos
swagger: "2.0"
